var vt       = require('vt'),
    Fixtures = require ('./fixtures/fixtures'),
    Envs     = Fixtures.Environments;

/* BrowserManager/BrowserInstance integration test. */
exports.testLocalPage = function (test) {
    var count = 0;
    Envs.forEach(function (env) {
        var manager = new vt.BrowserManager(env);
        var Hello = Fixtures.Hello;
        manager.lookup(1, function (inst) {
            inst.loadFromFile({
                path : __dirname + '/' + Hello.pathStr,
                success : function () {
                    test.notEqual(inst.dumpHTML(), "", "Page should not be empty.");
                    var copy = new vt.BrowserInstance()
                    copy.loadHTML(inst.dumpHTML(), function () {
                        test.equal(copy.dumpHTML().replace(/\s*/g, ''), Hello.html,
                                   "Creating a BrowserInstance with the clientHTML() of " +
                                   "another BrowserInstance should create an identical " +
                                   "BrowserInstance");
                        console.log('Finished with ' + env);
                        if (++count == Envs.length) {
                            test.done();
                        }
                    });
                },
                failure : function () {
                    test.ok(false, "Failed to load hello.html");
                    test.done();
                }
            });
        });
    });
}

/* Client/BrowserInstance integration test */
exports.testClientIntegration = function (test) {
    var count = 0;
    Envs.forEach(function (env) {
        var browser = new vt.BrowserInstance(env);
        browser.loadHTML("<html><head><title>Test 123</title></head><body>" +
                         "Here is a test!</body></html>", function () {
            var insts = browser.toInstructions();
            test.ok(insts.length > 0, "No instructions generated by toInstructions()");

            var clientbrowser = new vt.BrowserInstance();
            clientbrowser.loadHTML("", function () {
                var engine = new vt.client.UpdateEngine(clientbrowser.document);
                engine.process(insts);
                test.equal(clientbrowser.dumpHTML(), browser.dumpHTML(),
                           "DOM created from instructions doesn't match original.");
                console.log('Finished with ' + env);
                if (++count == Envs.length) {
                    test.done();
                }
            });
        });
    });
};

/* Loads a browser with HackerNews, load jQuery, and checks some things about
   the page. 
   */
exports.testHackernews = function (test) {
    var count = 0;
    Envs.forEach(function (env) {
        var browsers = new vt.BrowserManager();
        var HackerNews = Fixtures.HackerNews;
        browsers.lookup(1, function (inst) {
            inst.loadFromURL({
                url : HackerNews.urlStr,
                success : function () {
                    var linkTotal = 0;
                    var script = inst.document.createElement('script');
                    script.src = 'http://code.jquery.com/jquery-1.5.min.js';

                    script.onload = function () {
                        var $ = inst.window.$;
                        $('td.title:not(:last) a').each(function() {
                            linkTotal++;
                        });
                        test.equal(linkTotal, 30, 
                                   "We should have counted 30 links on the " +
                                   "HackerNews home page.");
                        console.log('Finished with ' + env);
                        if (++count == Envs.length) {
                            test.done();
                        }
                    };
                    script.onerror = function () {
                        fail("BrowserInstance failed to load jQuery.");
                        test.done();
                    };
                    inst.document.documentElement.appendChild(script);
                },
                failure : function (err) {
                    test.ok(false, "Failed to load HackerNews homepage.");
                    test.done();
                }
            });
        });
    });
};

