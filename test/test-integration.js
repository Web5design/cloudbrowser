var vt = require('vt'),
    Fixtures = require ('./fixtures/fixtures');

/* BrowserManager/BrowserInstance integration test. */
exports.testLocalPage = function (test) {
    var manager = new vt.BrowserManager();
    var Hello = Fixtures.Hello;
    manager.lookup(1, function (inst) {
        inst.loadFromFile({
            path : __dirname + '/' + Hello.pathStr,
            success : function () {
                test.notEqual(inst.dumpHTML(), "", "Page should not be empty.");
                var copy = new vt.BrowserInstance()
                copy.loadHTML(inst.dumpHTML());
                test.equal(copy.dumpHTML().replace(/\s*/g, ''), Hello.html,
                           "Creating a BrowserInstance with the clientHTML() of " +
                           "another BrowserInstance should create an identical " +
                           "BrowserInstance");
                test.done();
            },
            failure : function () {
                test.ok(false, "Failed to load hello.html");
                test.done();
            },
        });
    });
}

/* Client/BrowserInstance integration test */
exports.testClientIntegration = function (test) {
    var browser = new vt.BrowserInstance();
    browser.loadHTML("<html><head><title>Test 123</title></head><body>Here's a test!</body></html>");
    var insts = browser.toInstructions();
    test.ok(insts.length > 0, "No instructions generated by toInstructions()");

    var clientbrowser = new vt.BrowserInstance();
    clientbrowser.loadHTML("");
    var engine = new vt.client.UpdateEngine(clientbrowser.document);
    engine.process(insts);
    test.equal(clientbrowser.dumpHTML(), browser.dumpHTML(),
               "DOM created from instructions doesn't match original.");
    test.done();
};

/* Loads a browser with HackerNews, load jQuery, and checks some things about
   the page. 
   */
exports.testHackernews = function (test) {
    var browsers = new vt.BrowserManager();
    var HackerNews = Fixtures.HackerNews;
    browsers.lookup(1, function (inst) {
        inst.loadFromURL({
            url : HackerNews.urlStr,
            success : function () {
                var linkTotal = 0;
                var script = inst.document.createElement('script');
                script.src = 'http://code.jquery.com/jquery-1.5.min.js';

                script.onload = function () {
                    var $ = inst.window.$;
                    $('td.title:not(:last) a').each(function() {
                        linkTotal++;
                    });
                    test.equal(linkTotal, 30, 
                               "We should have counted 30 links on the " +
                               "HackerNews home page.");
                    test.done();
                };
                script.onerror = function () {
                    fail("BrowserInstance failed to load jQuery.");
                    test.done();
                };
                inst.document.documentElement.appendChild(script);
            },
            failure : function (err) {
                test.ok(false, "Failed to load HackerNews homepage.");
                test.done();
            }
        });
    });
};

