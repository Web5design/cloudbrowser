#!/usr/bin/env node

require('coffee-script');
var Path   = require('path'),
    vt     = require('../');
    Server = vt.Server,
    ko     = vt.ko;

var opts = global.opts = require('nomnom')
    .option('debug', {
        abbr    : 'd',
        flag    : true,
        default : false,
        help    : "Enable debug mode."})
    // Not hooked up.
    .option('compression', {
        abbr    : 'c',
        default : true,
        help    : "Enable protocol compression."})
    .option('knockout', {
        abbr    : 'ko',
        default : false,
        flag    : true,
        help    : "Enable server-side knockout.js bindings."})
    // Not hooked up.
    .option('resourceProxy', {
        abbr : 'rp',
        full : 'resource-proxy',
        default : true,
        help : "Enable ResourceProxy."})
    // Not hooked up.
    .option('url', {
        abbr : 'u',
        help : "A URL to serve."})
    .option('config', {
        abbr : 'cfg',
        help : "A file containing a server configuration function"})
    // TODO: this should take a url or file path.
    .option('appEntry', {
        position : 0,
        callback : function (entry) {
            if (!/\.html$/.test(entry)) {
                return "appEntry must point to a .html file.";
            }
        },
        help : "The entry point to the application."}).parse();

if (opts.url && opts.appEntry) {
    throw new Error("You can't supply both an appPath and a URL.");
}

if (opts.debug) {
    if (opts.appEntry) {
        console.log("Loading app from: " + opts.appEntry);
    } else {
        console.log("Loading from url: " + opts.url);
    }
}

var shared = {};
var s = new Server({
    appPath : opts.appEntry,
    shared : shared
});

if (opts.config) {
    var configure = require(opts.config).configure;
    configure(shared, ko);
}

s.once('ready', function () {
    console.log('All services running, ready for clients.')
});
